#!/bin/bash

. ###ROOT###/etc/omd/site.conf
if [ "$CONFIG_WEBSERVER" != own ] ; then
  exit 5
fi

# Start httpd in the C locale by default.
HTTPD_LANG="C"

# This will prevent initlog from swallowing up a pass-phrase prompt if
# mod_ssl needs a pass-phrase from the user.
INITLOG_ARGS=""

APACHE_RUN_USER="###SITE###"
APACHE_RUN_GROUP="###SITE###"

APACHE_BIN="###APACHE_BIN###"
PID_FILE=###ROOT###/tmp/apache/run/apache.pid
CONFIG_FILE=###ROOT###/etc/apache/apache.conf

pidof_apache() {
  # if there is actually an apache2 process whose pid is in PIDFILE,
  # print it and return 0.
  if [ -e "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    if ps $PID >/dev/null 2>&1; then
      echo $PID
      return 0
    fi
  fi
  return 1
}

apache_wait_stop() {
  # running ?
  pidtmp=$(pidof_apache) || true
  if kill -0 "${pidtmp:-}" 2> /dev/null; then
    pid=$pidtmp
    $APACHE_BIN -f "$CONFIG_FILE" -k stop
  else
    echo -n 'Not running. '
    return 0
  fi

  # wait until really stopped
  if [ -n "${pid:-}" ]; then
    i=0
    while kill -0 "${pid:-}" 2> /dev/null;  do
      if [ $i = '60' ]; then
        return 1
      else
        echo -n "."
        i=$(($i+1))
        sleep 1
      fi
     done
  fi
  
  [ -f "$PID_FILE" ] && rm -f "$PID_FILE"
  return 0
}

apache_wait_start() {
  if pidof_apache >/dev/null 2>&1; then
    echo -n 'Already running. '
    return 1
  fi

  $APACHE_BIN -f "$CONFIG_FILE"
  
  i=0
  while pidof_apache >/dev/null 2>&1;  do
    if [ $i = '10' ]; then
      return 1
    else
      echo -n "."
      i=$(($i+1))
      sleep 1
    fi
  done

  return 0
}

case $1 in 
  start)
    echo -n "Starting dedicated Apache for site ###SITE###... "
    if apache_wait_start; then
      echo 'OK.'
      exit 0
    else
      echo 'ERROR.'
      exit 1
    fi
  ;;
  stop)
    echo -n "Stopping dedicated Apache for site ###SITE###... "
    if apache_wait_stop; then
      echo 'OK.'
      exit 0
    else
      echo 'ERROR.'
      exit 1
    fi
  ;;
  restart)
    $0 stop
    $0 start
  ;;
  reload)
    echo "Reloading dedicated Apache for site ###SITE###"
    $APACHE_BIN -f "$CONFIG_FILE" -k graceful
  ;;
  status)
    PID=$(pidof_apache) || true
    if [ -n "$PID" ]; then
      echo "Apache is running (pid $PID)."
      exit 0
    else
      echo "Apache is NOT running."
      exit 1
    fi
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload|status}"
  ;;
esac
