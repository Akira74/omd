#!/usr/bin/python

# This program is used to manage instances (create, rm, cp, mv, update)
# There is almost no error handling implemented. Please remember: this
# is a prototype, an experiment - nothing more.

import sys, os, shutil

# FIXME: Determine this somehow
OMD_VERSION = 0.42

def bail_out(message):
    sys.stderr.write(message)
    sys.exit(1)

def site_dir(sitename):
    return "/omd/sites/" + sitename

def site_exists(sitename):
    return os.path.exists(site_dir(sitename))

def useradd(name):
    if 0 == os.system("groupadd " + name):
        if 0 != os.system("useradd -d '%s' -c 'OMD instance %s' -g %s %s" % \
                (site_dir(name), name, name, name)):
            os.system("groupdel " + name)
            return False
        else:
            return True
    else:
         return False

def userdel(name):
    os.system("userdel " + name)
    os.system("groupdel " + name)

def create_site(sitename):
    if site_exists(sitename):
        bail_out("Site '%s' already existing.\n" % sitename)

    # Create operating system user for site
    if not useradd(sitename):
        bail_out("Cannot create operating system user '%s'\n" % sitename)

    sitedir = site_dir(sitename)
    os.makedirs(sitedir)

    # Create symbolic link to version
    os.symlink("../../versions/%s" % OMD_VERSION, sitedir + "/version")

    # Build up directory structure with symbolic links relative to
    # the version link we just create
    for d in [ 'bin', 'include', 'lib', 'local', 'share' ]:
        os.symlink("version/" + d, sitedir + "/" + d)


def remove_site(sitename):
    userdel(sitename)
    if not site_exists(sitename):
        bail_out("No such site '%s'.\n" % sitename)
    shutil.rmtree(site_dir(sitename))


command = sys.argv[1]
if command == "create":
    create_site(sys.argv[2]) # should be name argument
elif command == "rm":
    remove_site(sys.argv[2])
else:
    bail_out("Sorry. Currently only 'create' and 'rm' are implemented.\n")
