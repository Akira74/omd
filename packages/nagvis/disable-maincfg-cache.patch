--- nagvis-1.5.2/share/server/core/classes/GlobalMainCfg.php.orig	2010-09-29 22:35:23.000000000 +0200
+++ nagvis-1.5.2/share/server/core/classes/GlobalMainCfg.php	2010-09-30 09:12:34.000000000 +0200
@@ -900,11 +900,14 @@
 		$id = count($this->CACHES);
 		$this->CACHES[$id] = new GlobalFileCache(GlobalCore::getInstance(), $file, CONST_MAINCFG_CACHE.'-'.CONST_VERSION.'-cache');
 
+		// OMD: Disabling main configuration cache usage since it does not work when using two
+		// configuration files at the moment. Will be fixed soon.
+		//
 		// When this or a file before is newer than the cache parse the file
-		if($this->useCache > 0)
-  		$this->useCache = $this->CACHES[$id]->isCached(false);
-		if($this->useCache === -1)
-			return $this->readConfig($file, true);
+		//if($this->useCache > 0)
+		//	$this->useCache = $this->CACHES[$id]->isCached(false);
+		//if($this->useCache === -1)
+		return $this->readConfig($file, true);
 	}
 	
 	public function init() {
@@ -915,11 +918,14 @@
 		foreach($this->configFiles AS $configFile)
 			$this->loadConfigFile($configFile);
 
+		// OMD: Disabling main configuration cache usage since it does not work when using two
+		// configuration files at the moment. Will be fixed soon.
+		//
 		// Use or write the cache depending on the situation
-		if($this->useCache !== -1)
-			$this->config = $this->CACHES[0]->getCache();
-		else
-			$this->CACHES[0]->writeCache($this->config, true);
+		//if($this->useCache !== -1)
+		//	$this->config = $this->CACHES[0]->getCache();
+		//else
+		$this->CACHES[0]->writeCache($this->config, true);
 
 		// Parse the state weight array
 		$this->parseStateWeight();
