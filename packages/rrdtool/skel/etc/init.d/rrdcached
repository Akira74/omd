#!/bin/bash

# chkconfig: 345 98 02
# description: RRD Tool cache daemon

### BEGIN INIT INFO
# Provides:       rrdcached
# Required-Start: 
# Required-Stop:  
# Default-Start:  2 3 5
# Default-Stop:
# Description:    Start RRD cache daemon
### END INIT INFO

# Timing options can be set here
TIMING="-w 3600 -z 1800 -f 7200"



# Please do not touch the code below

# rrdtool bails out if rrd dir contains symbolic links, so convert
# into phyical path with the following trick:
RRD_DIR=$( cd @ROOT@/var/pnp4nagios/rrd ; /bin/pwd )
CACHE_DIR="@ROOT@/tmp/rrdcached"
JOURNAL_DIR="@ROOT@/var/rrdcached"
SOCKET="@ROOT@/tmp/run/rrdcached.sock"
PIDFILE="@ROOT@/tmp/rrdcached.pid"
USER="@SITE@"
GROUP="@SITE@"
OPTS="$TIMING -s $GROUP -m 660 -l unix:$SOCKET -p $PIDFILE -j $JOURNAL_DIR -b $RRD_DIR -B"
DAEMON="@ROOT@/bin/rrdcached"

case "$1" in
    start)
 	echo -n 'Starting rrdcached...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "still running with pid $PID! Aborting!"
		exit 1
	    fi
	    echo "removing stale pid file..."
	    rm -f $PIDFILE
	fi

	# make sure, directories are there (ramdisk!)
	mkdir -p $CACHE_DIR $RRD_DIR && 
	$DAEMON $OPTS &&
	echo OK || echo Error
    ;;
    stop)
	echo -n 'Stopping rrdcached...'
        PID=$(cat $PIDFILE 2>/dev/null)
        if [ -z "$PID" ] ; then
	    echo "not running."
        elif kill "$PID" ; then
	    echo "OK"
        else
	    echo "Failed"
        fi
    ;;
    restart)
	$0 stop
	$0 start
    ;;
    status)
	echo -n 'Checking status of rrdcached...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "running"
		exit 0
	    fi
	fi
	echo "stopped"
	exit 1
    ;;
    *)
	echo "Usage: $0 {start|stop|restart|status}"
    ;;
esac
