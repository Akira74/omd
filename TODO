* Der admin muss einzelne Komponenten deaktivieren können. Gut wäre
  natürlich, wenn das nicht nur beim 'omd create', sondern jederzeit
  später auch möglich wäre. Das Ganze hat dann Einfluss auf

  - Startskripte
  - Nagios-Optionen
  - Konfiguration von Apache
  - evtl. weiteres

  Beispiel: PNP4Nagios. Wenn man es nicht will, dann muss
  - in nagios.cfg das entsprechend raus
  - der npcd gestoppt werden
  - der rrdcached ebenfalls
  - evtl. in Check_MK die Links auf die Perfdaten raus.
  Blöd ist hier z.B., dass nagios.cfg nicht modular ist. Vielleicht
  macht man einen Patch für ein nagios.d Verzeichnis.

  Die API dazu könnte sein:

  (aufgerufen als site-user):
  $ omd disable pnp4nagios
  $ omd enable nagvis
  $ omd addons ==> zeigt den Stand der Schalter (disabled/enabled)

  Gespeichert werden könnte das in @ROOT@/etc/omd/addons oder
  etc/omd.conf (ini-Datei)

  Dabei gibt es keine 1:1-Beziehung zwischen addons und Schaltern.
  Z.B. braucht man einen Schalter für Livestatus-TCP. Letzteres ist
  aber evtl. auch ein blödes Beispiel, weil die OMD sich hier raushalten
  kann und man das einfach dem Admin überlässt.

* Do restart of apache instead of reload after useradd(). This is 
  neccessary since apache gets a new group.

* Implement 'omd setup': That should check if all packages from
  that distro are installed OMD needs - and install them via
  yum, zypper, aptitude.

* Make a Webpage located on http://hostname/site/ with links
  to Nagios, Check_MK, PNP4Nagios and Nagvis. The page can
  also print the version of the site. 

* FIXME: "omd" python script is used when logged in as site user instead of
         the shell wrapper
  Mathias: Das ist Absicht, denn wenn man als Site-user omd aufruft,
  ist ja klar, welche Site es ist und welches omd aufgerufen wird.
  Die Operationen, die das globale omd mehr kann (omd uninstall, etc.)
  kann man eh nur als root aufrufen.

  Eigentlich sollte man im vesions-spezifischen 'omd' noch checken,
  ob man root ist und - falls ja - nur die Optionen start, stop,
  restart, status usw. zulassen.

* Die Distro-Spefischen Dinge in den Griff bekommen:
  - Benutzer in Gruppe aufnehmen (gpasswd)
  - Verzeichnis von Apache

  Irgendwie müssten wir beim 'make pack' oder schon bei 'make'
  schauen, auf was für einer Distro wir laufen und das entsprechend
  einkodieren. Man muss das Binärpaket eh immer genau auf der
  Distro kompilieren, für die das gedacht ist.

* Livestatus soll auf TCP hören, zumindest wenn das aktiviert ist.
  Oder man überlässt das dem Admin.

* Bei check_icmp fehlt das SUID-Bit. Selbst wenn man als root compiliert.
  Da brauchts noch eine gute generelle Lösung. Schlimmsten Falls eine
  Datei mit einer Liste von Pfade und zugehörigen Permissions, die
  mit installiert wird und bei 'omd setup' angewendet. Schön ist das
  nicht. Vielleicht braucht man sowas wie 'fakeroot'
