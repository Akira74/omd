* Nagios-CGIs abschaltbar machen (evtl. dann status_update_interval auf
  999999 oder sowas setzen)

* Livestatus-Netzwerksocket einschaltbar machen. Dabei die Portnummer
  irgendwie konfigurierbar machen.

* Bei omd config set ... muss an manchen Stellen Apache durchgeladen
  werden. Dazu hat aber der Site-Benutzer keine Berechtigung.
  Soll man ihm die mit sudo verpassen, oder was könnte man hier tun?

* Do restart of apache instead of reload after useradd(). This is 
  neccessary since apache gets a new group.

* Implement 'omd setup': That should check if all packages from
  that distro are installed OMD needs - and install them via
  yum, zypper, aptitude.

* Make a Webpage located on http://hostname/site/ with links
  to Nagios, Check_MK, PNP4Nagios and Nagvis. The page can
  also print the version of the site. 

* Die Distro-Spefischen Dinge in den Griff bekommen:
  - Benutzer in Gruppe aufnehmen (gpasswd)
  - Verzeichnis von Apache

  Irgendwie müssten wir beim 'make pack' oder schon bei 'make'
  schauen, auf was für einer Distro wir laufen und das entsprechend
  einkodieren. Man muss das Binärpaket eh immer genau auf der
  Distro kompilieren, für die das gedacht ist.

* Livestatus soll auf TCP hören, zumindest wenn das aktiviert ist.
  Oder man überlässt das dem Admin.

* Bei check_icmp fehlt das SUID-Bit. Selbst wenn man als root compiliert.
  Da brauchts noch eine gute generelle Lösung. Schlimmsten Falls eine
  Datei mit einer Liste von Pfade und zugehörigen Permissions, die
  mit installiert wird und bei 'omd setup' angewendet. Schön ist das
  nicht. Vielleicht braucht man sowas wie 'fakeroot'

* Makefiles: Evtl. sollte man die Targets des Hauptmakefiles etwas
  an die Standards angleichen:
  make -> baut alles
  make install -> installiert direkt unter Bausystem /omd/$VERSION
  make DESTDIR=... install -> installiert unter Hilfswurzel 
  make dist -> packt Quellcodes ein, ohne GIT, ohne Kompilate
  make pack -> wie bisher
  make rpm -> Erzeugt RPM-Paket?
