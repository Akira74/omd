#!/bin/bash
set -e

# FIXME: Do not hardcode this here
OMD_VERSION=0.42

usage ()
{
    cat <<EOF
Usage: omd COMMAND [PARAMETERS]

  omd create SITE VERSION   Create new site based on version VERSION
  omd rm SITE               Delete site and all its data!
  omd cp SITE SITE2         Create new site as copy of existing one
  omd mv SITE SITE2         Rename site
  omd update SITE VERSION   Update existing site to new OMD version

  omd start SITE            Startup site
  omd stop SITE             Stop site
  omd restart SITE          Restart site
  omd reload SITE           Reload site (make config change active)
  omd status SITE           Check if site is running

  omd sites                 List all existing sites
  omd versions              List all installed versions


where:
 
 SITE ..... is the name of a site (a monitoring instance)
 VERSION .. is the name of an installed OMD version

EOF
    exit 1
}

list_sites ()
{
    for site in /omd/sites/*
    do
        if [ -d "$site" ] ; then
            local SITE=${site##*/}
            echo "$SITE"
        fi
    done
}

list_versions ()
{
    for version in /omd/versions/*
    do
        if [ -d "$version" ] ; then
            local VERSION=${version##*/}
            echo "$VERSION"
        fi
    done
}

version_specific_omd ()
{
    local VERSION="$1"
    shift
    exec /omd/versions/$VERSION/bin/omd "$@"
}


COMMAND=$1
case "$COMMAND" in 
    rm|cp|mv)
        SITE="$2"
        exec /omd/sites/$SITE/bin/omd "$@"
    ;;
    start|stop|restart|reload|status)
        if [ "$2" ] ; then
            exec /omd/sites/$2/bin/omd "$@"
        else
            for site in $(list_sites) ; do
                exec /omd/sites/$site/bin/omd "$@"
            done
        fi
    ;;
    create|update)
        VERSION="${3:-$OMD_VERSION}"
        exec /omd/versions/$VERSION/bin/omd "$@"
    ;;
    sites)
        list_sites
    ;;
    versions)
        list_versions
    ;;
    *)
        usage
    ;;
esac

