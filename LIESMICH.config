Überlegung zum Ein-/Ausschaltung von Komponenten
------------------------------------------------

Motivation:

Der Admin sollte die Möglichkeit bekommen, einzelne Komponenten
ein- und auszuschalten. Beispiele dafür:

* PNP4Nagios ausschalten - keine Perfdaten
* Livestatus ausschalten - Zugriff nur über Standard-CGIs
* Apache-Support ausschalten - Verwendung der Instanz als Monitoring-Drohne
  ohne GUI
* Nagios Core ausschalten - Verwenden der Instanz als GUI (z.B. Multisite/Thruk)
* Verwendung eines anderen Cores (Icinga, Shinken)

Dabei besteht keine 1:1 Beziehung zwischen Packages und Komponenten.
Manche Addons bieten keine Möglichkeit zum Schalten, z.B. nagios-plugins.
Die sind einfach immer da. Andere biete sogar mehrere Komponenten zum
Schalten.

Die immer generell alle Addons installiert werden, dient das
Schalten nicht als Ersatz für einen Paketmanager. Es ist nur notwendig,
wenn das Verhalten des Systems beeinflusst werden muss.

Konfiguration:

Jede site braucht eine Konfiguration, die festlegt, welche Komponenten
ein- und ausgeschaltet sind. Dies könnte man in einer Textdatei ablegen,
die von der Shell direkt eingelesen werden kann. Damit stehen die
Informationen z.B. bequem in Startskripten zur Verfügung. In der Datei
können auch später weiter Konfigurationsparameter abgelegt werden, die
über OMD verwaltet werden.

Wenn man einen Schritt weiterdenkt, könnte man das Ein-/Ausschalten von
Komponenten nur als Spezialfall betrachten und allgemein von Konfigurations-
Parametern sprechen, die von OMD verwaltet werden. Dabei ist der Schwerpunkt
nach wie vor auf der Zusammenarbeit der Komponenten (Systemintegration).
Es soll kein Ersatz geschaffen werden für ein Nagios-Konfigurationswerkzeug.

/omd/sites/muc/etc/omd/siteconfig:
pnp4nagios="on"
omd_core="nagios"

Auswirkung:

* Bestimmten Daemonen werden gestartet oder nicht
* Konfigurationsdateien werden aktiviert oder nicht (Apache, Nagios)

Implementierung:

Bei den Daemonen ist das Setzen von Variablen in siteconfig ausreichend.
Zur Vereinfachung kann man vorschreiben, dass vor einem Ändern der Konfiguration
ein Stoppen oder danach ein Neustart der Instanz notwendig ist. Das Schalten
wir durch einen Wrapper-Befehl erledigt (omd config). Dieser kann das
Stoppen und Starten entweder vom Benutzer verlangen oder selbst durchführen.

An anderen Stellen muss ein Addon beliebige Aktionen einbinden können.
Das kann z.B. auch das Erzeugen eines Datenbankschemas bedeuten. Oder
das Verlinken einer Konfigdatei (analog zum Schema bei Debian:Apache
mit sites-enabled und sites-available). Dazu soll das Addon hooks installieren 
können. 

Vorschlag dazu:

/omd/versions/0.42/lib/omd/hooks/

Jeder hook entspricht einer Komponente. Es ist ein Shellskript mit 
dem Namen der Komponente. Der Hook bekommt einen Aufrufparameter:
die Aktion. Folgende Aktionen sind denkbar:

alias) Gibt einen sprechenden Namen für die Komponente, bzw. die Configoption
    auf stdout aus

description) 
    Gibt eine Beschreibung aus.

choices) Beschreibt die Wahlmöglichkeiten für den Schalter in einer standadisierten
    Form

set) Setzt einen neuen Wert für die Option. Hier können dann die tatsächlichen 
    Aktionen untergebracht werden.

Der Hook wird immer über omd aufgerufen und muss daher keine
Kontrolle der Parameter machen. Er darf davon ausgehen, dass

1. $1 immer einen erlaubten Wert hat
2. Im Falle von "set" auch $2 nur einen der in choices
   erlaubten Werte hat
3. in $OMD_SITE der Name der Site vererbt wird
4. in $OMD_ROOT das Rootverzeichnis der Seit vererbt wird

Beispiel für PNP4Nagios:

/omd/versions/0.42/lib/omd/hooks/pnp4nagios
-----------------------------------------------------
#!/bin/bash
case "$1" in 
        alias)  
                echo "Process performance data with PNP4Nagios" 
        ;;
        description)
                cat << EOF
PNP4Nagios is a great addon for storing Nagios performance data
into round robin databases. This switch enabled the processsing
of performance data by pnp. It implies the starting of the daemon
"npcd", the rrdcached and load the broker module npcdmod into
Nagios.
EOF
        ;;
        choices)
                echo "on: enable"
                echo "off: disable"
        ;;
        set)
                if [ "$2" == "on" ]
                then
                    ln -sfn ../pnp4nagios/nagios.cfg $OMD_ROOT/etc/nagios/nagios.d/pnp4nagios.cfg 
                else
                    rm -f $OMD_ROOT/etc/nagios/nagios.d/pnp4nagios.cfg 
                fi
        ;;
esac


